{"version":3,"sources":["styles/buttonSyles.css.js","functions/number-compacter.js","components/GameStats/GameStats.js","components/Store1/Store1.js","components/Store2/Store2.js","components/App/App.js","functions/menuControls.js","index.js"],"names":["buttonAvailable","fontSize","borderStyle","minWidth","backgroundColor","minHeight","cursor","margin","borderRadius","buttonUnavailable","pointerEvents","NumberCompacter","num","Math","abs","Number","toFixed","toString","slice","length","GameStats","props","id","className","perClick","perAutoClick","autoClickSpeed","numOfPinetrees","pinetreesMod","pineconesCurrent","clicksTotal","Store1","type","style","clicksCurrent","autoClick2xPrice","onClick","buyAuto2x","twoS1","autoClick4xPrice","buyAuto4x","fourS1","perClick2xPrice","buyExClick2x","perClick4xPrice","buyExClick4x","autoClickSpeedPrice","buyAutoSpeed","Store2","pinetreePrice","buyPineTree","doubleBaseS1Price","increaseBasePrice2x","pinetreesModPrice","buyPinetreesMod","App","useState","setClicksTotal","setClicksCurrent","setPerClick","setPerAutoClick","setAutoClickSpeed","setPineconesCurrent","setNumOfPinetrees","setPinetreesMod","setAutoClick2xPrice","setAutoClick4xPrice","setPerClick2xPrice","setPerClick4xPrice","setPinetreesModPrice","setAutoClickSpeedPrice","setDoubleBaseS1Price","setPinetreePrice","setTwoS1","setFourS1","useEffect","interval","setInterval","round","clearInterval","menu1ID","menu2ID","storeNavID","menu1","document","getElementById","menu2","storeNav","display","innerText","menuControls","cost","href","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f4cd9e2f.chunk.js","sourcesContent":["\r\n\r\n/* \r\n    Specific styles for whether a button is available\r\n    If unavailable pointer events are disabled\r\n*/\r\n\r\nexport const buttonAvailable = {\r\n    fontSize: '.8em',\r\n    borderStyle: 'none',\r\n    minWidth: '5em',\r\n    backgroundColor: '#DA7422',\r\n    minHeight: '2.3em',\r\n    cursor: \"pointer\",\r\n    margin: \"0 0.5em\",\r\n    borderRadius: \".2em\"\r\n}\r\nexport const buttonUnavailable = {\r\n    fontSize: '.8em',\r\n    borderStyle: 'none',\r\n    minWidth: '5em',\r\n    minHeight: '2.3em',\r\n    backgroundColor: 'grey',\r\n    pointerEvents: 'none',\r\n    cursor: \"default\",\r\n    margin: \"0 0.5em\",\r\n    borderRadius: \".2em\"\r\n}","\r\n\r\nexport default function NumberCompacter(num) {\r\n        /*\r\n                Changes numbers over a thousand into a shorter form\r\n                or adds a comma if in the thousands range\r\n\r\n                EX: 3784587 changes to '3.78 Million'\r\n                EX: 1000 changes to '1,000'\r\n                EX: 222 stays the same\r\n        */\r\n        num = Math.abs(Number(num)).toFixed(0);\r\n\r\n        return num < 1.0e+3\r\n        ? num\r\n\r\n        // Thousands\r\n        : num < 1.0e+6\r\n        ?  // Slice string to add comma and then rejoin\r\n        num.toString().slice(0, num.toString().length - 3)\r\n        + ',' +\r\n        num.toString().slice(num.toString().length - 3)\r\n\r\n        // Millions \r\n        : num < 1.0e+9\r\n        ? (num / 1.0e+6).toFixed(2) + \" Million\"\r\n\r\n        // Billions\r\n        : num < 1.0e+12\r\n        ? (num / 1.0e+9).toFixed(2) + \" Billion\"\r\n\r\n        // Trillions\r\n        : num < 1.0e+15\r\n        ? (num / 1.0e+12).toFixed(2) + \" Trillion\"\r\n\r\n        // Quadrillions\r\n        : num < 1.0e+18\r\n        ? (num / 1.0e+15).toFixed(2) + \" Quadrillion\"\r\n\r\n        // Quintillions\r\n        : num < 1.0e+21\r\n        ? (num / 1.0e+18).toFixed(2) + \" Quintillion\"\r\n\r\n        // Sextillions\r\n        : num < 1.0e+24\r\n        ? (num / 1.0e+21).toFixed(2) + \" Sextillion\"\r\n\r\n        // Septillions\r\n        : num < 1.0e+27\r\n        ? (num / 1.0e+24).toFixed(2) + \" Septillion\"\r\n\r\n        // Octillions\r\n        : num < 1.0e+30\r\n        ? (num / 1.0e+27).toFixed(2) + \" Octillion\"\r\n\r\n        // Nonillions\r\n        : num < 1.0e+33\r\n        ? (num / 1.0e+30).toFixed(2) + \" Nonillion\"\r\n\r\n        // Decillions\r\n        : num < 1.0e+36\r\n        ? (num / 1.0e+33).toFixed(2) + \" Decillion\"\r\n\r\n        // Undecillions\r\n        : num < 1.0e+39\r\n        ? (num / 1.0e+36).toFixed(2) + \" Undecillion\"\r\n\r\n        // Duodecillions\r\n        : num < 1.0e+42\r\n        ? (num / 1.0e+39).toFixed(2) + \" Duodecillion\"\r\n\r\n        // Tredecillions\r\n        : num < 1.0e+45\r\n        ? (num / 1.0e+42).toFixed(2) + \" Tredecillion\"\r\n\r\n        // Quattuordecillions\r\n        : num < 1.0e+48\r\n        ? (num / 1.0e+45).toFixed(2) + \" Quattuordecillion\"\r\n\r\n        // Tredecillions\r\n        : num < 1.0e+51\r\n        ? (num / 1.0e+48).toFixed(2) + \" Quindecillion\"\r\n\r\n        // Sexdecillions\r\n        : num < 1.0e+54\r\n        ? (num / 1.0e+51).toFixed(2) + \" Sexdecillion\"\r\n\r\n        // Septendecillions\r\n        : num < 1.0e+57\r\n        ? (num / 1.0e+54).toFixed(2) + \" Septendecillion\"\r\n\r\n        // Octodecillions\r\n        : num < 1.0e+60\r\n        ? (num / 1.0e+57).toFixed(2) + \" Octodecillion\"\r\n\r\n        : num\r\n}","import React from 'react';\r\nimport \"./GameStats.css\";\r\nimport NumberCompacter from './../../functions/number-compacter.js';\r\n\r\n\r\n\r\nexport default function GameStats(props)  {\r\n    /*\r\n    Displays game statistics inside a box\r\n    */\r\n    return(\r\n        <aside id={\"gameStatsInside\"}>\r\n            <h3>Stats</h3>\r\n                <p className={\"rowStyles\"}>Selfclick:&nbsp;{NumberCompacter(props.perClick)}</p>\r\n                {props.perAutoClick > 0 &&\r\n                    <p className={\"rowStyles\"}>Auto:&nbsp;{NumberCompacter(props.perAutoClick/(props.autoClickSpeed/1000))}/s</p>\r\n                }\r\n                {props.numOfPinetrees > 0 &&\r\n                    <div>\r\n                        <p className={\"rowStyles\"}> \r\n                            Pinecones:&nbsp;{NumberCompacter((props.numOfPinetrees * props.pinetreesMod)/(props.autoClickSpeed/1000))}/s&nbsp;\r\n                            \r\n                        </p>\r\n                        <ul className={\"listStyles\"}>\r\n                            <li><em>Pinetrees: {NumberCompacter(props.numOfPinetrees)}</em></li>\r\n                            <li><em>Modifier: {NumberCompacter(props.pinetreesMod)}</em></li>\r\n                        </ul>\r\n                        \r\n                        <br />\r\n                        <p className={\"rowStyles\"}>Pinecones:&nbsp;{NumberCompacter(props.pineconesCurrent)}</p>\r\n                    </div>\r\n                }\r\n                <p className={\"rowStyles\"}>Total Clicks:&nbsp;{NumberCompacter(props.clicksTotal)}</p>\r\n        </aside>\r\n    )\r\n}","import React  from 'react';\r\n\r\n// Import CSS\r\nimport {buttonAvailable, buttonUnavailable} from \"../../styles/buttonSyles.css\";\r\n\r\n// Import JS Functions\r\nimport NumberCompacter from '../../functions/number-compacter.js';\r\n\r\n\r\n\r\nexport default function Store1(props) {\r\n    // Contains the jsx for store 1\r\n\r\n    return (\r\n        <div>\r\n            {/* Buy amount per autoclick 2x */}\r\n            {props.clicksTotal >= 30 &&\r\n                <p>\r\n                    <button type=\"button\" \r\n                        style={props.clicksCurrent >= props.autoClick2xPrice ? buttonAvailable : buttonUnavailable}\r\n                        onClick={() => props.buyAuto2x()}\r\n                        >Autoclick +{NumberCompacter(props.twoS1)}\r\n                    </button>\r\n                    {NumberCompacter(props.autoClick2xPrice)}\r\n                </p>\r\n            }\r\n\r\n\r\n            {/* Buy amount per autoclick 4x */}\r\n            {props.clicksTotal >= 1500 &&\r\n                <p>\r\n                    <button type=\"button\" \r\n                        style={props.clicksCurrent >= props.autoClick4xPrice ? buttonAvailable : buttonUnavailable}\r\n                        onClick={() => props.buyAuto4x()}\r\n                        >Autoclick +{NumberCompacter(props.fourS1)}\r\n                    </button>\r\n                    {NumberCompacter(props.autoClick4xPrice)}\r\n                </p>\r\n            }\r\n\r\n            {/* Buy amount per self click 2x */}\r\n            {props.clicksTotal >= 30 &&\r\n                <p>\r\n                    <button type=\"button\"\r\n                        style={props.clicksCurrent >= props.perClick2xPrice ? buttonAvailable : buttonUnavailable}\r\n                        onClick={() => props.buyExClick2x()}\r\n                        >Selfclick +{NumberCompacter(props.twoS1)}\r\n                    </button>\r\n                    {NumberCompacter(props.perClick2xPrice)}\r\n                </p>\r\n            }\r\n\r\n            {/* Buy amount per self click 4x */}\r\n            {props.clicksTotal >= 1500 &&\r\n                <p>\r\n                    <button type=\"button\"\r\n                        style={props.clicksCurrent >= props.perClick4xPrice ? buttonAvailable : buttonUnavailable}\r\n                        onClick={() => props.buyExClick4x()}\r\n                        >Selfclick +{NumberCompacter(props.fourS1)}\r\n                    </button>\r\n                    {NumberCompacter(props.perClick4xPrice)}\r\n                </p>\r\n            }\r\n\r\n            {/* Buy autoclick speed */}\r\n            {props.clicksTotal >= 300 && props.autoClickSpeed > 250 &&\r\n                <p>\r\n                    <button type=\"button\"\r\n                        style={props.clicksCurrent >= props.autoClickSpeedPrice ? buttonAvailable : buttonUnavailable}\r\n                        onClick={() => props.buyAutoSpeed()}\r\n                        >Autoclick -250ms\r\n                    </button>\r\n                    {NumberCompacter(props.autoClickSpeedPrice)}\r\n                </p>\r\n            }\r\n        \r\n        </div>\r\n\r\n    )}","import React  from 'react';\r\n\r\n// Import CSS\r\nimport {buttonAvailable, buttonUnavailable} from \"../../styles/buttonSyles.css\";\r\n\r\n// Import JS Functions\r\nimport NumberCompacter from '../../functions/number-compacter.js';\r\n\r\n\r\n\r\nexport default function Store2(props) {\r\n    // Contains the jsx for store 2\r\n\r\n    return (\r\n        <div>\r\n            {/* Buy amount per autoclick 2x */}\r\n\r\n            {/* Buy pinetree */}\r\n            {props.clicksTotal > 15000 &&\r\n                <p>\r\n                    <button type=\"button\"\r\n                        style={props.pineconesCurrent >= props.pinetreePrice ? buttonAvailable : buttonUnavailable}\r\n                        onClick={() => props.buyPineTree()}\r\n                        >Pinetree +1\r\n                    </button>\r\n                    {props.pinetreePrice > 0 ? NumberCompacter(props.pinetreePrice) + ' pincones' : 'free'} {/* Display as free for first purchase */}\r\n                </p>\r\n            }\r\n\r\n            {/* Double base incrementals */}\r\n            {props.clicksTotal >= 15000 &&\r\n                <p>\r\n                    <button type=\"button\"\r\n                        style={props.pineconesCurrent >= props.doubleBaseS1Price ? buttonAvailable : buttonUnavailable}\r\n                        onClick={() => props.increaseBasePrice2x()}\r\n                        >Click incrementals *2\r\n                    </button>\r\n                    {NumberCompacter(props.doubleBaseS1Price) + ' pincones'}\r\n                </p>\r\n            }\r\n\r\n            {props.clicksTotal >= 500000 &&\r\n                <p>\r\n                    <button type=\"button\" \r\n                        style={props.clicksCurrent >= props.pinetreesModPrice ? buttonAvailable : buttonUnavailable}\r\n                        onClick={() => props.buyPinetreesMod()}\r\n                        >Pintree mod + 10\r\n                    </button>\r\n                    {NumberCompacter(props.pinetreesModPrice)}\r\n                </p>\r\n            }\r\n\r\n        </div>\r\n\r\n    )}","import React, {useState, useEffect} from 'react';\r\n\r\n// Import CSS\r\nimport  \"./App.css\";\r\nimport {buttonAvailable} from \"../../styles/buttonSyles.css\";\r\n\r\n// Import Components\r\nimport GameStats from \"../GameStats/GameStats.js\";\r\nimport Store1 from \"../Store1/Store1.js\";\r\nimport Store2 from \"../Store2/Store2.js\";\r\n\r\n// Import JS Functions\r\nimport NumberCompacter from '../../functions/number-compacter.js';\r\nimport menuControls from '../../functions/menuControls.js';\r\n\r\nexport default function App() {\r\n\r\n    // Amounts | Clicks\r\n    const [clicksTotal,setClicksTotal] = useState(0);\r\n    const [clicksCurrent,setClicksCurrent] = useState(0);\r\n    const [perClick,setPerClick] = useState(1);\r\n    const [perAutoClick,setPerAutoClick] = useState(0);\r\n    const [autoClickSpeed,setAutoClickSpeed] = useState(1000);\r\n    \r\n    // Amounts | Pine\r\n    const [pineconesCurrent,setPineconesCurrent] = useState(0);\r\n    const [numOfPinetrees,setNumOfPinetrees] = useState(0);\r\n    const [pinetreesMod,setPinetreesMod] = useState(1);\r\n\r\n    // Prices | clicks\r\n    const [autoClick2xPrice,setAutoClick2xPrice] = useState(60);\r\n    const [autoClick4xPrice,setAutoClick4xPrice] = useState(80);\r\n    const [perClick2xPrice,setPerClick2xPrice] = useState(100);\r\n    const [perClick4xPrice,setPerClick4xPrice] = useState(120);\r\n    const [pinetreesModPrice,setPinetreesModPrice] = useState(1000000);\r\n    const [autoClickSpeedPrice,setAutoClickSpeedPrice] = useState(600);\r\n\r\n    // Prices | Pincones\r\n    const [doubleBaseS1Price,setDoubleBaseS1Price] = useState(60);\r\n    const [pinetreePrice,setPinetreePrice] = useState(0);\r\n\r\n    // These numbers determine how much to add to per click amounts\r\n    // They can be doubled infinite times ingame\r\n    const [twoS1,setTwoS1] = useState(2);\r\n    const [fourS1,setFourS1] = useState(4);\r\n\r\n\r\n    useEffect( () => {\r\n        // The auto clicker\r\n        const interval = setInterval(() => {\r\n            setClicksTotal(clicksTotal => Math.round(clicksTotal + perAutoClick));\r\n            setClicksCurrent(clicksCurrent => Math.round(clicksCurrent + perAutoClick));\r\n            setPineconesCurrent(pineconesCurrent => Math.round(pineconesCurrent + (numOfPinetrees * pinetreesMod)));\r\n            \r\n        }, autoClickSpeed);\r\n        return () => clearInterval(interval);\r\n\r\n        // Only re-render when specific values change\r\n    }, [autoClickSpeed, perAutoClick, numOfPinetrees, pinetreesMod]);\r\n            \r\n    \r\n\r\n\r\n    // Handleclicks\r\n    function handleClickerButton() {\r\n        setClicksTotal(clicksTotal => clicksTotal + perClick);\r\n        setClicksCurrent(clicksCurrent => clicksCurrent + perClick);\r\n    }\r\n\r\n    function buyAuto2x() {\r\n        const cost = autoClick2xPrice;\r\n        if (clicksCurrent >= cost) {\r\n            setPerAutoClick(perAutoClick => perAutoClick + twoS1);\r\n            setClicksCurrent(clicksCurrent => clicksCurrent - cost);\r\n            setAutoClick2xPrice(cost + Math.round(cost *.10));\r\n        }\r\n    }\r\n\r\n    function buyAuto4x() {\r\n        const cost = autoClick4xPrice;\r\n        if (clicksCurrent >= cost) {\r\n            setPerAutoClick(perAutoClick => perAutoClick + fourS1);\r\n            setClicksCurrent(clicksCurrent => clicksCurrent - cost);\r\n            setAutoClick4xPrice(cost + Math.round(cost *.10));\r\n        }\r\n    }\r\n\r\n    function buyExClick2x() {\r\n        const cost = perClick2xPrice;\r\n        if (clicksCurrent >= cost) {\r\n            setPerClick(perClick => perClick + twoS1);\r\n            setClicksCurrent(clicksCurrent => clicksCurrent - cost);\r\n            setPerClick2xPrice(cost + Math.round(cost *.10));\r\n        }\r\n    }\r\n\r\n    function buyExClick4x() {\r\n        const cost = perClick4xPrice;\r\n        if (clicksCurrent >= cost) {\r\n            setPerClick(perClick => perClick + fourS1);\r\n            setClicksCurrent(clicksCurrent => clicksCurrent - cost);\r\n            setPerClick4xPrice(cost + Math.round(cost *.10));\r\n        }\r\n    }\r\n\r\n    function buyAutoSpeed() {\r\n        const cost = autoClickSpeedPrice;\r\n        if (clicksCurrent >= cost) {\r\n            setAutoClickSpeed(autoClickSpeed => autoClickSpeed - 250);\r\n            setClicksCurrent(clicksCurrent => clicksCurrent - cost);\r\n            setAutoClickSpeedPrice(cost + Math.round(cost *.5));\r\n        }\r\n    }\r\n\r\n    function increaseBasePrice2x() {\r\n        const cost = doubleBaseS1Price;\r\n        if (pineconesCurrent >= cost) {\r\n            setPerClick(perClick => perClick * 2);\r\n            setPerAutoClick(perAutoClick => perAutoClick * 2);\r\n            setTwoS1(twoS1 => twoS1 * 2);\r\n            setFourS1(fourS1 => fourS1 * 2);\r\n\r\n            setPineconesCurrent(pineconesCurrent => pineconesCurrent - cost);\r\n            setDoubleBaseS1Price(cost + (cost * 2.5))\r\n        }\r\n    }\r\n\r\n    function buyPineTree() {\r\n        const cost = pinetreePrice;\r\n        if (pineconesCurrent >= cost) {\r\n            setPineconesCurrent(pineconesCurrent => pineconesCurrent - cost);\r\n            setNumOfPinetrees(numOfPinetrees => numOfPinetrees + 1);\r\n\r\n            cost > 0\r\n            ? setPinetreePrice(Math.round( cost + (1.5 * numOfPinetrees) ))\r\n            : setPinetreePrice(100)\r\n        }\r\n    }\r\n\r\n    function buyPinetreesMod() {\r\n        const cost = pinetreesModPrice;\r\n        if (clicksCurrent >= cost) {\r\n            setClicksCurrent(clicksCurrent => clicksCurrent - cost);\r\n            setPinetreesMod(pinetreesMod => pinetreesMod + 10);\r\n            setPinetreesModPrice(Math.round( cost + (pinetreesMod * 100000) ));\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div style={{\r\n        margin: \"none\"\r\n        }}>\r\n        <main id={\"main\"}>\r\n            <div id=\"mainHead\">\r\n                <h1>Super Cool Clicker Idle</h1>\r\n                <h2 id={\"clicksCurrent\"}> {NumberCompacter(clicksCurrent)} </h2>\r\n            </div>\r\n            <div id=\"storeContainer\"> {/* minWidth = 10em * 2 to match the h2 element above*/}\r\n\r\n                <p>\r\n                    <button type=\"button\"\r\n                            style={buttonAvailable}\r\n                            onClick={() => handleClickerButton()}\r\n                            >Click\r\n                    </button>\r\n                </p>\r\n                \r\n                {clicksTotal >= 30 &&\r\n                    <h3>Store\r\n\r\n                        {clicksTotal > 15000 &&\r\n                            <button\r\n                            type=\"button\"\r\n                            id=\"storeNav\"\r\n                            style={{\r\n                                \"background\": \"none\",\r\n                                \"fontSize\": \".8em\",\r\n                                \"color\": \"#DA7422\",\r\n                                \"border\": \"none\",\r\n                                \"cursor\": \"pointer\"\r\n                                }}\r\n                            onClick={() => menuControls(\"store1\", \"store2\", \"storeNav\")}\r\n                            > Next &#62;\r\n                            </button>\r\n                        }\r\n                    </h3>\r\n                }\r\n                \r\n                <div id=\"store1\" style={{\"display\": \"initial\"}}>\r\n                    <Store1\r\n                    // Variables\r\n                        clicksTotal = {clicksTotal}\r\n                        clicksCurrent = {clicksCurrent}\r\n                        autoClickSpeed = {autoClickSpeed}\r\n                        autoClick2xPrice = {autoClick2xPrice}\r\n                        autoClick4xPrice = {autoClick4xPrice}\r\n                        perClick2xPrice = {perClick2xPrice}\r\n                        perClick4xPrice = {perClick4xPrice}\r\n                        autoClickSpeedPrice = {autoClickSpeedPrice}\r\n                        twoS1 = {twoS1}\r\n                        fourS1 = {fourS1}\r\n\r\n\r\n                    // Functions\r\n                        buyAuto2x = {buyAuto2x}\r\n                        buyAuto4x = {buyAuto4x}\r\n                        buyExClick2x = {buyExClick2x}\r\n                        buyExClick4x = {buyExClick4x}\r\n                        buyAutoSpeed = {buyAutoSpeed}\r\n                    />\r\n                </div>\r\n                <div id=\"store2\" style={{\"display\": \"none\"}}>\r\n                    <Store2\r\n                    // Variables\r\n                        clicksTotal = {clicksTotal}\r\n                        clicksCurrent = {clicksCurrent}\r\n                        pineconesCurrent = {pineconesCurrent}\r\n                        pinetreePrice = {pinetreePrice}\r\n                        doubleBaseS1Price = {doubleBaseS1Price}\r\n                        pinetreesMod = {pinetreesMod}\r\n                        pinetreesModPrice = {pinetreesModPrice}\r\n\r\n                    // Functions\r\n                        buyPinetreesMod = {buyPinetreesMod}\r\n                        increaseBasePrice2x = {increaseBasePrice2x}\r\n                        buyPineTree = {buyPineTree}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"gameStatsContainer\">\r\n                <GameStats  perAutoClick={perAutoClick}\r\n                            autoClickSpeed={autoClickSpeed}\r\n                            perClick={perClick}\r\n                            pineconesCurrent={pineconesCurrent}\r\n                            numOfPinetrees={numOfPinetrees}\r\n                            pinetreesMod={pinetreesMod}\r\n                            clicksTotal={clicksTotal}\r\n                />\r\n            </div>\r\n        </main>\r\n        <footer id=\"footer\">\r\n            <div id=\"footerInside\">\r\n                <p>Version 1.0.0</p>\r\n                <p>MIT © Michael Parker</p>\r\n                <p><a href=\"https://github.com/iHaveSticks/Super-Cool-Clicker-Idle/\">View github</a></p>\r\n            </div>\r\n        </footer>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","export default function menuControls(menu1ID, menu2ID, storeNavID = \"\") {\r\n\t/*\r\n\t\tSwitch between elements by closing one and opening another\r\n\t*/\r\n\r\n\r\n\tconst menu1 = document.getElementById(menu1ID);\r\n\tconst menu2 = document.getElementById(menu2ID);\r\n\tconst storeNav = document.getElementById(storeNavID);\r\n\t\r\n\tif (menu1.style.display === \"initial\") {\r\n\t\t\r\n\t\tmenu1.style.display = \"none\";\r\n\t\tmenu2.style.display = \"initial\";\r\n\r\n\t\tif(storeNav) storeNav.innerText = \"< Back\";\r\n\t\t\r\n\t} else {\r\n\t\tmenu1.style.display = \"initial\";\r\n\t\tmenu2.style.display = \"none\";\r\n\r\n\t\tif(storeNav) storeNav.innerText = \"Next >\";\r\n\t}\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./styles/index.css\";\r\nimport App from \"./components/App/App.js\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n    <App />\r\n    </React.StrictMode>,\r\ndocument.getElementById('root'));\r\n"],"sourceRoot":""}